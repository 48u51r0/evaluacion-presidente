significance <- 0.95
formula <- "eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff"
for (i in seq_len(length(aux)-1)){
pre <- aux[[i]]
post <- aux[[i+1]]
pooled[[i]] <- bind_rows(pre, post) %>%
mutate(breakpoint = case_when(Periodo == min(Periodo) ~ "Antes",
Periodo == max(Periodo) ~ "Después") %>%
factor()
)
}
df <- pooled %>%
map(~lmrob(eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff,
data= .,
weights = PESO)) %>%
map(~ggpredict(., c("ideol_GMC[all]", "breakpoint"), ci.lvl = 0.95)) %>%
map(~as_tibble(.))
for (i in seq_along(df)){
df[[i]] <- df[[i]] %>%
mutate(transition = case_when(i == 1 ~ "Noviembre-Enero",
i == 2 ~ "Enero-Febrero",
i == 3 ~ "Febrero-Marzo ",
i == 4 ~ "Marzo-Abril",
i == 5 ~ "Abril-Mayo",
TRUE ~ "Ampliar el script"))
}
df <- bind_rows(df)
rm(pre, post, aux, formula)
#df <- bind_rows(pooled)
View(aux1)
View(df)
create <- function(..., significance = 0.95){
aux <- list(...)
pooled <- list()
formula <- "eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff"
for (i in seq_len(length(aux)-1)){
pre <- aux[[i]]
post <- aux[[i+1]]
pooled[[i]] <- bind_rows(pre, post) %>%
mutate(breakpoint = case_when(Periodo == min(Periodo) ~ "Antes",
Periodo == max(Periodo) ~ "Después") %>%
factor()
)
}
df <<- pooled %>%
map(~lmrob(eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff,
data= .,
weights = PESO)) %>%
map(~ggpredict(., c("ideol_GMC[all]", "breakpoint"), ci.lvl = significance)) %>%
map(~as_tibble(.))
for (i in seq_along(df)){
df[[i]] <<- df[[i]] %>%
mutate(transition = case_when(i == 1 ~ "Noviembre-Enero",
i == 2 ~ "Enero-Febrero",
i == 3 ~ "Febrero-Marzo ",
i == 4 ~ "Marzo-Abril",
i == 5 ~ "Abril-Mayo",
TRUE ~ "Ampliar el script"))
}
df <- bind_rows(df)
rm(pre, post, aux, formula)
#df <- bind_rows(pooled)
return(df)
}
aux1 <- create(df_3269,df_3271,df_3273)
rm(df)
aux <- list(df_3269,df_3271,df_3273)
pooled <- list()
significance <- 0.95
formula <- "eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff"
for (i in seq_len(length(aux)-1)){
pre <- aux[[i]]
post <- aux[[i+1]]
pooled[[i]] <- bind_rows(pre, post) %>%
mutate(breakpoint = case_when(Periodo == min(Periodo) ~ "Antes",
Periodo == max(Periodo) ~ "Después") %>%
factor()
)
}
df <- pooled %>%
map(~lmrob(eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff,
data= .,
weights = PESO)) %>%
map(~ggpredict(., c("ideol_GMC[all]", "breakpoint"), ci.lvl = significance)) %>%
map(~as_tibble(.))
for (i in seq_along(df)){
df[[i]] <- df[[i]] %>%
mutate(transition = case_when(i == 1 ~ "Noviembre-Enero",
i == 2 ~ "Enero-Febrero",
i == 3 ~ "Febrero-Marzo ",
i == 4 ~ "Marzo-Abril",
i == 5 ~ "Abril-Mayo",
TRUE ~ "Ampliar el script"))
}
df <- bind_rows(df)
rm(pre, post, aux, formula)
#df <- bind_rows(pooled)
View(df)
View(aux1)
create <- function(..., significance = 0.95){
aux <- list(...)
pooled <- list()
model <- "eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff"
for (i in seq_len(length(aux)-1)){
pre <- aux[[i]]
post <- aux[[i+1]]
pooled[[i]] <- bind_rows(pre, post) %>%
mutate(breakpoint = case_when(Periodo == min(Periodo) ~ "Antes",
Periodo == max(Periodo) ~ "Después") %>%
factor()
)
}
df <<- pooled %>%
map(~lmrob(model,
data= .,
weights = PESO)) %>%
map(~ggpredict(., c("ideol_GMC[all]", "breakpoint"), ci.lvl = significance)) %>%
map(~as_tibble(.))
for (i in seq_along(df)){
df[[i]] <<- df[[i]] %>%
mutate(transition = case_when(i == 1 ~ "Noviembre-Enero",
i == 2 ~ "Enero-Febrero",
i == 3 ~ "Febrero-Marzo ",
i == 4 ~ "Marzo-Abril",
i == 5 ~ "Abril-Mayo",
TRUE ~ "Ampliar el script"))
}
df <- bind_rows(df)
rm(pre, post, aux, formula)
#df <- bind_rows(pooled)
return(df)
}
aux2 <- create(df_3269,df_3271,df_3273)
View(aux2)
prueba <- function(..., significance = 0.99){
aux <- list(...)
pooled <- list()
for (i in seq_len(length(aux)-1)){
pre <- aux[[i]]
post <- aux[[i+1]]
pooled[[i]] <- bind_rows(pre, post) %>%
mutate(breakpoint = case_when(Periodo == min(Periodo) ~ "Antes",
Periodo == max(Periodo) ~ "Después") %>%
factor()
)
}
df <<- pooled %>%
map(~lmrob(eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff,
data= .,
weights = PESO)) %>%
map(~ggpredict(., c("ideol_GMC[all]", "breakpoint"), ci.lvl = significance)) %>%
map(~as_tibble(.))
for (i in seq_along(df)){
df[[i]] <<- df[[i]] %>%
mutate(transition = case_when(i == 1 ~ "Noviembre-Enero",
i == 2 ~ "Enero-Febrero",
i == 3 ~ "Febrero-Marzo ",
i == 4 ~ "Marzo-Abril",
i == 5 ~ "Abril-Mayo",
TRUE ~ "Ampliar el script"))
}
df <- bind_rows(df)
rm(pre, post, aux, formula)
#df <- bind_rows(pooled)
}
a <- prueba(df_3269, df_3271, df_3273)
str(a)
a
prueba <- function(..., significance = 0.99){
aux <- list(...)
pooled <- list()
for (i in seq_len(length(aux)-1)){
pre <- aux[[i]]
post <- aux[[i+1]]
pooled[[i]] <- bind_rows(pre, post) %>%
mutate(breakpoint = case_when(Periodo == min(Periodo) ~ "Antes",
Periodo == max(Periodo) ~ "Después") %>%
factor()
)
}
df <<- pooled %>%
map(~lmrob(eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff,
data= .,
weights = PESO)) %>%
map(~ggpredict(., c("ideol_GMC[all]", "breakpoint"), ci.lvl = significance)) %>%
map(~as_tibble(.))
for (i in seq_along(df)){
df[[i]] <<- df[[i]] %>%
mutate(transition = case_when(i == 1 ~ "Noviembre-Enero",
i == 2 ~ "Enero-Febrero",
i == 3 ~ "Febrero-Marzo ",
i == 4 ~ "Marzo-Abril",
i == 5 ~ "Abril-Mayo",
TRUE ~ "Ampliar el script"))
}
df <- bind_rows(df)
rm(pre, post, aux, formula)
salida <- list(df = df, pooled = pooled)
return(salida)
}
a <- prueba(df_3269, df_3271, df_3273)
prueba <- function(..., significance = 0.99){
aux <- list(...)
pooled <- list()
for (i in seq_len(length(aux)-1)){
pre <- aux[[i]]
post <- aux[[i+1]]
pooled[[i]] <- bind_rows(pre, post) %>%
mutate(breakpoint = case_when(Periodo == min(Periodo) ~ "Antes",
Periodo == max(Periodo) ~ "Después") %>%
factor()
)
}
df <<- pooled %>%
map(~lmrob(eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff,
data= .,
weights = PESO)) %>%
map(~ggpredict(., c("ideol_GMC[all]", "breakpoint"), ci.lvl = significance)) %>%
map(~as_tibble(.))
for (i in seq_along(df)){
df[[i]] <<- df[[i]] %>%
mutate(transition = case_when(i == 1 ~ "Noviembre-Enero",
i == 2 ~ "Enero-Febrero",
i == 3 ~ "Febrero-Marzo ",
i == 4 ~ "Marzo-Abril",
i == 5 ~ "Abril-Mayo",
TRUE ~ "Ampliar el script"))
}
df <- bind_rows(df)
rm(pre, post, aux)
salida <- list(df = df, pooled = pooled)
return(salida)
}
a <- prueba(df_3269, df_3271, df_3273)
a$df
a$pooled
predictions <- function(..., significance = 0.99){
aux <- list(...)
pooled <- list()
for (i in seq_len(length(aux)-1)){
pre <- aux[[i]]
post <- aux[[i+1]]
pooled[[i]] <- bind_rows(pre, post) %>%
mutate(breakpoint = case_when(Periodo == min(Periodo) ~ "Antes",
Periodo == max(Periodo) ~ "Después") %>%
factor()
)
}
df <<- pooled %>%
map(~lmrob(eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff,
data= .,
weights = PESO)) %>%
map(~ggpredict(., c("ideol_GMC[all]", "breakpoint"), ci.lvl = significance)) %>%
map(~as_tibble(.))
for (i in seq_along(df)){
df[[i]] <<- df[[i]] %>%
mutate(transition = case_when(i == 1 ~ "Noviembre-Enero",
i == 2 ~ "Enero-Febrero",
i == 3 ~ "Febrero-Marzo ",
i == 4 ~ "Marzo-Abril",
i == 5 ~ "Abril-Mayo",
TRUE ~ "Ampliar el script"))
}
df <- bind_rows(df)
rm(pre, post, aux)
salida <- list(df = df, pooled = pooled)
return(salida)
}
tmp <- predictions(df_3269, df_3271, df_3273, df_3277, df_3279, df_3281)
muestra_pooled <- function(data){
sample <- data %>%
select(eval_pres, ideol_GMC, PESO, breakpoint) %>%
arrange(eval_pres,ideol_GMC,breakpoint) %>%
group_by(breakpoint,eval_pres, ideol_GMC) %>%
summarise(size=sum(PESO)) %>%
ungroup() %>%
mutate(prop = size/sum(size)*100) %>%
rename( predicted=eval_pres ,
x=ideol_GMC,
group = breakpoint) %>%
select(-size)
return(sample)
}
datos_muestra <- map(tmp$pooled, muestra_pooled)
datos_muestra
tmp$df %>%
ggplot(aes(x=x, y=predicted, group = group, color= group))+
geom_line() +
geom_ribbon(aes(ymin= conf.low, ymax=conf.high, fill=group), alpha= .3, colour=NA)+
guides(color = FALSE,
size = FALSE)+
theme(legend.title = element_blank())
head(tmp$df)
tmp$df %>%
ggplot(aes(x=x, y=predicted, group = group, color= group))+
geom_line() +
geom_ribbon(aes(ymin= conf.low, ymax=conf.high, fill=group), alpha= .3, colour=NA)+
guides(color = FALSE,
size = FALSE)+
theme(legend.title = element_blank())+
facet_wrap(~transition)
predictions <- function(..., significance = 0.99){
aux <- list(...)
pooled <- list()
for (i in seq_len(length(aux)-1)){
pre <- aux[[i]]
post <- aux[[i+1]]
pooled[[i]] <- bind_rows(pre, post) %>%
mutate(breakpoint = case_when(Periodo == min(Periodo) ~ "Antes",
Periodo == max(Periodo) ~ "Después") %>%
factor()
)
}
df <<- pooled %>%
map(~lmrob(eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff,
data= .,
weights = PESO)) %>%
map(~ggpredict(., c("ideol_GMC[all]", "breakpoint"), ci.lvl = significance)) %>%
map(~as_tibble(.))
for (i in seq_along(df)){
df[[i]] <<- df[[i]] %>%
mutate(transition = case_when(i == 1 ~ "Noviembre-Enero",
i == 2 ~ "Enero-Febrero",
i == 3 ~ "Febrero-Marzo ",
i == 4 ~ "Marzo-Abril",
i == 5 ~ "Abril-Mayo",
TRUE ~ "Ampliar el script") %>%
factor(levels = c("Noviembre-Enero",
"Enero-Febrero",
"Febrero-Marzo ",
"Marzo-Abril",
"Abril-Mayo",
)
)
)
}
df <- bind_rows(df)
rm(pre, post, aux)
salida <- list(df = df, pooled = pooled)
return(salida)
}
#Función para transformar las muestras pooled de forma que agrupamos los datos por
#valores de ideologia y valoración presidente y teniendo en cuenta los pesos
#determinamos el tamaño relativo de los individuos de las muestras que ocupan
#cada posición
muestra_pooled <- function(data){
sample <- data %>%
select(eval_pres, ideol_GMC, PESO, breakpoint) %>%
arrange(eval_pres,ideol_GMC,breakpoint) %>%
group_by(breakpoint,eval_pres, ideol_GMC) %>%
summarise(size=sum(PESO)) %>%
ungroup() %>%
mutate(prop = size/sum(size)*100) %>%
rename( predicted=eval_pres ,
x=ideol_GMC,
group = breakpoint) %>%
select(-size)
return(sample)
}
tmp <- predictions(df_3269, df_3271, df_3273, df_3277, df_3279, df_3281)
datos_muestra <- map(tmp$pooled, muestra_pooled)
predictions <- function(..., significance = 0.99){
aux <- list(...)
pooled <- list()
for (i in seq_len(length(aux)-1)){
pre <- aux[[i]]
post <- aux[[i+1]]
pooled[[i]] <- bind_rows(pre, post) %>%
mutate(breakpoint = case_when(Periodo == min(Periodo) ~ "Antes",
Periodo == max(Periodo) ~ "Después") %>%
factor()
)
}
df <<- pooled %>%
map(~lmrob(eval_pres ~ breakpoint*ns(ideol_GMC, 3) + man + higher_educ + welloff,
data= .,
weights = PESO)) %>%
map(~ggpredict(., c("ideol_GMC[all]", "breakpoint"), ci.lvl = significance)) %>%
map(~as_tibble(.))
for (i in seq_along(df)){
df[[i]] <<- df[[i]] %>%
mutate(transition = case_when(i == 1 ~ "Noviembre-Enero",
i == 2 ~ "Enero-Febrero",
i == 3 ~ "Febrero-Marzo ",
i == 4 ~ "Marzo-Abril",
i == 5 ~ "Abril-Mayo",
TRUE ~ "Ampliar el script") %>%
factor(levels = c("Noviembre-Enero",
"Enero-Febrero",
"Febrero-Marzo ",
"Marzo-Abril",
"Abril-Mayo",
"Ampliar el script")
)
)
}
df <- bind_rows(df)
rm(pre, post, aux)
salida <- list(df = df, pooled = pooled)
return(salida)
}
#Función para transformar las muestras pooled de forma que agrupamos los datos por
#valores de ideologia y valoración presidente y teniendo en cuenta los pesos
#determinamos el tamaño relativo de los individuos de las muestras que ocupan
#cada posición
muestra_pooled <- function(data){
sample <- data %>%
select(eval_pres, ideol_GMC, PESO, breakpoint) %>%
arrange(eval_pres,ideol_GMC,breakpoint) %>%
group_by(breakpoint,eval_pres, ideol_GMC) %>%
summarise(size=sum(PESO)) %>%
ungroup() %>%
mutate(prop = size/sum(size)*100) %>%
rename( predicted=eval_pres ,
x=ideol_GMC,
group = breakpoint) %>%
select(-size)
return(sample)
}
tmp <- predictions(df_3269, df_3271, df_3273, df_3277, df_3279, df_3281)
datos_muestra <- map(tmp$pooled, muestra_pooled)
tmp$df %>%
ggplot(aes(x=x, y=predicted, group = group, color= group))+
geom_line() +
geom_ribbon(aes(ymin= conf.low, ymax=conf.high, fill=group), alpha= .3, colour=NA)+
guides(color = FALSE,
size = FALSE)+
theme(legend.title = element_blank())+
facet_wrap(~transition)
tmp$df %>%
ggplot(aes(x=x, y=predicted, group = group, color= group))+
geom_line() +
geom_ribbon(aes(ymin= conf.low, ymax=conf.high, fill=group), alpha= .3, colour=NA)+
guides(color = FALSE,
size = FALSE)+
theme(legend.title = element_blank())+
facet_wrap(~transition)+
opts(
legend.position = c(0.8, 0.2), # c(0,0) bottom left, c(1,1) top-right.
legend.background = theme_rect(fill = "white", colour = NA)
)
#-----------------Visualización------------------------------------------------
tmp$df %>%
ggplot(aes(x=x, y=predicted, group = group, color= group))+
geom_line() +
geom_ribbon(aes(ymin= conf.low, ymax=conf.high, fill=group), alpha= .3, colour=NA)+
guides(color = FALSE,
size = FALSE)+
theme(legend.title = element_blank())+
facet_wrap(~transition)+
theme(legend.position = c(0.8, 0.2)
,legend.background = element_rect(fill = "white", colour = NA))
#-----------------Visualización------------------------------------------------
tmp$df %>%
ggplot(aes(x=x, y=predicted, group = group, color= group))+
geom_line() +
geom_ribbon(aes(ymin= conf.low, ymax=conf.high, fill=group), alpha= .3, colour=NA)+
guides(color = FALSE,
size = FALSE)+
theme(legend.title = element_blank())+
facet_wrap(~transition)+
theme(legend.position = c(0.9, 0.3)
,legend.background = element_rect(fill = "white", colour = NA))
#-----------------Visualización------------------------------------------------
tmp$df %>%
ggplot(aes(x=x, y=predicted, group = group, color= group))+
geom_line() +
geom_ribbon(aes(ymin= conf.low, ymax=conf.high, fill=group), alpha= .3, colour=NA)+
guides(color = FALSE,
size = FALSE)+
theme(legend.title = element_blank())+
facet_wrap(~transition)+
theme(legend.position = c(0.85, 0.25)
,legend.background = element_rect(fill = "white", colour = NA))
View(head(df_3269))
install.packages("rcompanion")
library(rcompanion)
groupwiseMean(ideol_pers ~1, )
groupwiseMean(ideol_pers ~1, data = df_3269, weights =PESO )
groupwiseMean(ideol_pers ~1, data = df_3269)
groupwiseMean(ideol_pers ~1, data = df_3271)
groupwiseMean(ideol_pers ~1, data = df_3273)
groupwiseMean(ideol_pers ~1, data = df_3277)
groupwiseMean(ideol_pers ~1, data = df_3279)
install.packages("boot")
install.packages("boot")
library(boot)
Mboot_w = boot(df_3269$ideol_pers * df_3269$PESO, function(x,i) mean(x[i]), R=10000)
Mboot_w
boot.ci(Mboot_w, conf = 0.95,  type = c("norm", "basic" ,"perc"))
boot(df_3269$ideol_pers, statistic = mean, weights = df_3269$PESO)
boot(df_3269$ideol_pers, statistic = mean, weights = df_3269$PESO, R = 10000)
Mboot_w = boot(df_3269$ideol_pers * df_3269$PESO, function(x,i) mean(x[i]), R=100000)
Mboot_w
boot.ci(Mboot_w, conf = 0.95,  type = c("norm", "basic" ,"perc"))
weighted.mean(df_3269$ideol_pers, df_3269$PESO, na.rm = T)
sd <- weighted.sd(df_3269$ideol_pers, df_3269$PESO, na.rm = T)
weighted.sd <- function(x, w, na.rm = FALSE) {
if (na.rm) {
w <- w[i <- !is.na(x)]
x <- x[i]
}
var.w <- (sum(w*x^2) * sum(w) - sum(w*x)^2) / (sum(w)^2 - sum(w^2))
sqrt(var.w)
}
sd <- weighted.sd(df_3269$ideol_pers, df_3269$PESO, na.rm = T)
se <- sd/sqrt(length(df_3269$ideol_pers[!is.na(df_3269$ideol_pers)]))
4.584237 + 1.96 * se
4.584237 - 1.96 * se
qnorm(0.05)
qnorm(0.05,sd = sd, mean = 4.584237)
pnorm(0.05,sd = sd, mean = 4.584237)
