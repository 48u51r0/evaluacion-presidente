vacio
4:!
4:1
by_trans <- mtcars %>% group_by(am) %>%
do(tidy(lm(mpg ~ wt + cyl + disp + gear, data = .))) %>%
filter(term != "(Intercept)") %>% rename(model=am)
by_trans
mtcars
by_trans <- mtcars %>% group_by(am) %>%
do(tidy(lm(mpg ~ wt + cyl + disp + gear, data = .)))
by_trans
vacio <- varcov_sandwich(Vacío)
filter(term != "(Intercept)") %>% rename(model=am)
vacio
str(vacio)
vacio$nobs
attr(vacio, "nobs")
attr(vacio, "dimnames")
tidy(vacio)
tidy(vacio)$std.error
sqrt(diag(vcovHC(Vacío, type = "HC0")))
# loading library of functions
source("Scripts/libs.R")
# Install all the necessary packages
packages <- (c("weights","haven", "sandwich", "multcomp", "emmeans",
"tidyverse", "conflicted", "ggeffects", "splines",
"robustbase", "stargazer", "vistime",
"ggrepel", "scales", "lmtest"))
install_pack(packages)
# Solve conflicts between packages
masked_functions("stats")
# Load data sets the name of which starts with "df_"
load_data("df_")
#definimos las variables a utilizar
vars <- rlang::quo(c(id, Periodo,
eval_pres,
ideol_pers, ideol_GMC, ideol_2, ideol_3,
RV, partidismo_1, partidismo_2,
man, higher_educ, welloff,
PESO)
)
# recogemos los nombres de nuestros data frame nombrados según patron df_
dfs <- ls(pattern = "df_")
# para cada nombre lo asignamos a su objeto y seleccionamos las variables
for (i in seq_along(dfs)) {
assign(dfs[i],
# get toma un string nombre de un objeto y lo transforma en dicho objeto
value = get(dfs[i]) %>%
# selecciona las vars
select(!!vars) %>%
# elimina las columnas que solo contiene NA
select_if(~!all(is.na(.))) %>%
# elimina las filas con algún NA
drop_na()
)
}
# Clean auxiliary functions(lsf.str) and objects
rm(list = c(lsf.str(), "packages","vars", "dfs", "i"))
lm(cyl~mpg, mtcars) %>% tidy()
varcov_sandwich <- function(model, sandwich_type = "HC0"){
aux <- bptest(model)$p.value
if (aux <= .05)
coeftest(model,
vcov. = (vcovHC(model,
type = sandwich_type)
)
)
else
cat("The model is Homoscedatic")
}
Completo <- lm(mod_completo,
data = df_3277,
weights = PESO)
mod_vacio <- "eval_pres ~ man + higher_educ+ welloff"
mod_voto <- "eval_pres ~ RV + man + higher_educ + welloff"
#mod_partidismo <- "eval_pres ~ partidismo_1 + man + higher_educ + welloff"
mod_ideologia <- "eval_pres ~ ideol_GMC + man+higher_educ+welloff"
mod_adicion <-  "eval_pres ~ RV + ideol_GMC + man+higher_educ+welloff"
mod_interaccion <- "eval_pres ~ RV*(ideol_GMC ) + man+higher_educ+welloff"
prepara_modelo <- . %>%
varcov_sandwich() %>%
tidy() %>%
filter(!term %in% c())
Completo <- lm(mod_completo,
data = df_3277,
weights = PESO)
`Interacción` <- lm(mod_interaccion,
data = df_3277,
weights = PESO)
summary(Interacción)
prepara_modelo <- . %>%
varcov_sandwich() %>%
tidy() %>%
filter(!term %in% c("(Intercept)",
"manHombre",
"higher_educUniversitario",
"welloffMedio-alto")
)
`Interacción` <- lm(mod_interaccion,
data = df_3277,
weights = PESO) %>% prepara_modelo()
Interacción
regresion <- lm(.,
data =3277,
weights = PESO)
regresion <- . %>% lm(data =3277,
weights = PESO)
`Vacío` <- mod_vacio %>% regresion
regresion <- . %>% lm(.,data =3277,
weights = PESO)
`Vacío` <- mod_vacio %>% regresion
regresion <- function(formula){
lm(formula,
data =3277,
weights = PESO)
}
`Vacío` <- mod_vacio %>% regresion()
regresion <- function(formula){
lm(as.formula(formula),
data =3277,
weights = PESO)
}
`Vacío` <- mod_vacio %>% regresion()
`Vacío` <- eval_pres ~ man + higher_educ+ welloff %>% regresion()
Vacío
mod_vacio <- eval_pres ~ man + higher_educ+ welloff
`Vacío` <- mod_vacio %>% regresion()
mod_vacio <- as.formula(eval_pres ~ man + higher_educ+ welloff)
mod_vacio <- as.formula(eval_pres ~ man + higher_educ+ welloff)
`Vacío` <- mod_vacio %>% regresion()
regresion <- function(formula){
lm(as.formula(formula),
data =3277,
weights = PESO)
}
regresion(mod_vacio)
regresion <- function(formula){
lm(as.formula(formula),
data =df_3277,
weights = PESO)
}
mod_vacio <- "eval_pres ~ man + higher_educ+ welloff"
mod_vacio %>% regresion()
mod_interaccion <- "eval_pres ~ RV*(ideol_GMC ) + man+higher_educ+welloff"
mod_interaccion <- "eval_pres ~ RV*ideol_GMC + man+higher_educ+welloff"
mod_interaccion %>% regresion()
a <- mod_interaccion %>% regresion()
summary(a)
a$coefficients
interaccion <- regresion(interaccion)
mod_interaccion <- "eval_pres ~ RV*ideol_GMC + man+higher_educ+welloff"
interaccion <- regresion(mod_interaccion)
interaccion
interaccion
interaccion$coefficients
names(interaccion$coefficients)
names(interaccion$coefficients)
m_interaccion <- interaccion %>% prepara_modelo()
m_interaccion
m_interaccion$term
voto <- regresion(mod_voto)
ideologia <- regresion(mod_ideologia)
adicion <- regresion(mod_adicion)
interaccion <- regresion(mod_interaccion)
# Preparamos los modelos para gráfico dots & whiskers
#m_vacio <- vacio %>% prepara_modelo()
m_voto <- voto %>%  prepara_modelo()
m_ideologia <- ideologia %>% prepara_modelo()
m_adicion <- adicion %>% prepara_modelo()
m_interaccion <- interaccion %>% prepara_modelo()
m_interaccion$term
m_adicion$term
m_ideologia$term
m_voto$term
setdiff(m_voto$term, m_interaccion$term)
setdiff(m_interaccion$term, m_voto$term)
setdiff(m_interaccion$term, m_ideologia$term)
dim(mod_interaccion)
mod_interaccion
dim(interaccion)
dim(m_interaccion)
m_interaccion
anti_join(m_voto, m_interaccion)
full_join(m_voto, m_interaccion)
anti_join(m_voto, m_interaccion)
anti_join(m_interaccion,m_voto)
semi_join(m_voto, m_interaccion)
semi_join(m_interaccion,m_voto)
inner_join(m_voto, m_interaccion)
inner_join(m_interaccion,m_voto)
left_join(m_voto, m_interaccion)
right_join(m_voto, m_interaccion)
full_join(m_voto, m_interaccion, by=c("term", "estimate"))
inner_join(m_voto, m_interaccion, by=c("term", "estimate"))
right_join(m_voto, m_interaccion, by=c("term", "estimate"))
inner_join(m_interaccion, m_voto, by=c("term", "estimate"))
inner_join(m_interaccion, m_voto, by=c("term"))
aux <- m_interaccion %>% mutate(-1, ~replace(.,!is.na(), NA))
m_interaccion %>% mutate_at(vars(-c(terms)), ~replace(., !is.na(.), 0))
m_interaccion
m_interaccion %>% mutate_at(vars(-c(term)), ~replace(., !is.na(.), 0))
m_interaccion %>% mutate_at(vars(-c(term)), ~replace(., !is.na(.), NA))
aux <- m_interaccion %>% mutate_at(vars(-c(term)), ~replace(., !is.na(.), NA))
inner_join(aux, m_voto)
inner_join(m_voto, aux)
full_join(m_voto, aux)
left_join(m_voto, aux)
right_join(m_voto, aux)
nest_join(m_voto, aux)
full_join(m_voto, aux)
full_join(m_voto, aux, by=c("term"))
semi_join(m_voto, aux, by=c("term"))
semi_join(m_voto, aux
)
full_join(m_voto, aux, by=c("term"))
full_join(m_voto, aux, by=c("term"), copy=FALSE)
full_join(m_voto, aux, by=c("term"), copy=TRUE)
full_join(m_voto, aux, by=c("term"), na.matches= "never")
setdiff(m_interaccion, m_voto)
setdiff(m_interaccion$term, m_voto$term)
setdiff(aux, m_voto)
setdiff(m_voto,aux)
m_voto
aux
inner_join(aux, m_voto)
inner_join(aux, m_voto, by= c("term"))
inner_join(m_voto, aux
)
semi_join(m_voto, aux)
inner_join(aux, m_voto, by = c("estimate", "std.error", "statistic", "p.value"))
inner_join(m_voto, aux, by = c("estimate", "std.error", "statistic", "p.value"))
full_join(m_voto, aux, by = c("estimate", "std.error", "statistic", "p.value"))
full_join(m_ideeologia, aux, by = c("estimate", "std.error", "statistic", "p.value"))
full_join(m_ideologia, aux, by = c("estimate", "std.error", "statistic", "p.value"))
setdiff(m_interaccion, m_adicion)
setdiff(m_interaccion$term, m_adicion$term)
m_voto <- rbind(m_voto,
c("ideol_GMC", rep(NA, ncol(m_voto)-1)),
c("RVPP:ideol_GMC", rep(NA, ncol(m_voto)-1)),
c("RVPSOE:ideol_GMC", rep(NA, ncol(m_voto)-1)),
c("RVCs:ideol_GMC", rep(NA, ncol(m_voto)-1)),
c("RVUP:ideol_GMC", rep(NA, ncol(m_voto)-1)),
c("RVMP:ideol_GMC", rep(NA, ncol(m_voto)-1)),
c("RVVOX:ideol_GMC", rep(NA, ncol(m_voto)-1))
)
m_ideologia <- rbind(c("RVPP", rep(NA, ncol(m_ideologia)-1)),
c("RVPSOE", rep(NA, ncol(m_ideologia)-1)),
c("RVCs", rep(NA, ncol(m_ideologia)-1)),
c("RVUP", rep(NA, ncol(m_ideologia)-1)),
c("RVMP", rep(NA, ncol(m_ideologia)-1)),
c("RVVOX", rep(NA, ncol(m_ideologia)-1)),
m_ideologia,
c("RVPP:ideol_GMC", rep(NA, ncol(m_ideologia)-1)),
c("RVPSOE:ideol_GMC", rep(NA, ncol(m_ideologia)-1)),
c("RVCs:ideol_GMC", rep(NA, ncol(m_ideologia)-1)),
c("RVUP:ideol_GMC", rep(NA, ncol(m_ideologia)-1)),
c("RVMP:ideol_GMC", rep(NA, ncol(m_ideologia)-1)),
c("RVVOX:ideol_GMC", rep(NA, ncol(m_ideologia)-1))
)
m_adicion <- rbind(m_adicion,
c("RVPP:ideol_GMC", rep(NA, ncol(m_ideologia)-1)),
c("RVPSOE:ideol_GMC", rep(NA, ncol(m_ideologia)-1)),
c("RVCs:ideol_GMC", rep(NA, ncol(m_ideologia)-1)),
c("RVUP:ideol_GMC", rep(NA, ncol(m_ideologia)-1)),
c("RVMP:ideol_GMC", rep(NA, ncol(m_ideologia)-1)),
c("RVVOX:ideol_GMC", rep(NA, ncol(m_ideologia)-1))
)
# Añadimos variable "model" a cada modelo
m_voto <- mutate(model = "Recuerdo voto")
m_ideologia <- mutate(model = "Ubicación D-I")
m_adicion <- mutate(model = "Aditivo")
m_interaccion <- mutate(model = "Interacción")
ncol(m_ideologia)-1
# Todo modelo con las mismas variables y en el mismo orden
m_voto <- rbind(m_voto,
c("ideol_GMC", rep(NA, 4)),
c("RVPP:ideol_GMC", rep(NA, 4)),
c("RVPSOE:ideol_GMC", rep(NA, 4)),
c("RVCs:ideol_GMC", rep(NA, 4)),
c("RVUP:ideol_GMC", rep(NA, 4)),
c("RVMP:ideol_GMC", rep(NA, 4)),
c("RVVOX:ideol_GMC", rep(NA, 4))
)
m_ideologia <- rbind(c("RVPP", rep(NA, 4)),
c("RVPSOE", rep(NA, 4)),
c("RVCs", rep(NA, 4)),
c("RVUP", rep(NA, 4)),
c("RVMP", rep(NA, 4)),
c("RVVOX", rep(NA, 4)),
m_ideologia,
c("RVPP:ideol_GMC", rep(NA, 4)),
c("RVPSOE:ideol_GMC", rep(NA, 4)),
c("RVCs:ideol_GMC", rep(NA, 4)),
c("RVUP:ideol_GMC", rep(NA, 4)),
c("RVMP:ideol_GMC", rep(NA, 4)),
c("RVVOX:ideol_GMC", rep(NA, 4))
)
m_adicion <- rbind(m_adicion,
c("RVPP:ideol_GMC", rep(NA, 4)),
c("RVPSOE:ideol_GMC", rep(NA, 4)),
c("RVCs:ideol_GMC", rep(NA, 4)),
c("RVUP:ideol_GMC", rep(NA, 4)),
c("RVMP:ideol_GMC", rep(NA, 4)),
c("RVVOX:ideol_GMC", rep(NA, 4))
)
# Añadimos variable "model" a cada modelo
m_voto <- m_voto %>%
mutate(model = "Recuerdo voto")
m_ideologia <- m_ideologia %>%
mutate(model = "Ubicación D-I")
m_adicion <- m_adicion %>%
mutate(model = "Aditivo")
m_interaccion <- m_interaccion %>%
mutate(model = "Interacción")
m_ideologia
voto <- regresion(mod_voto)
ideologia <- regresion(mod_ideologia)
adicion <- regresion(mod_adicion)
interaccion <- regresion(mod_interaccion)
# Preparamos los modelos para gráfico dots & whiskers
#m_vacio <- vacio %>% prepara_modelo()
m_voto <- voto %>%  prepara_modelo()
m_ideologia <- ideologia %>% prepara_modelo()
m_adicion <- adicion %>% prepara_modelo()
m_interaccion <- interaccion %>% prepara_modelo()
m_voto
m_voto <- rbind(m_voto,
c("ideol_GMC", rep(NA, 4)),
c("RVPP:ideol_GMC", rep(NA, 4)),
c("RVPSOE:ideol_GMC", rep(NA, 4)),
c("RVCs:ideol_GMC", rep(NA, 4)),
c("RVUP:ideol_GMC", rep(NA, 4)),
c("RVMP:ideol_GMC", rep(NA, 4)),
c("RVVOX:ideol_GMC", rep(NA, 4))
)
m_voto
voto <- regresion(mod_voto)
ideologia <- regresion(mod_ideologia)
adicion <- regresion(mod_adicion)
interaccion <- regresion(mod_interaccion)
# Preparamos los modelos para gráfico dots & whiskers
#m_vacio <- vacio %>% prepara_modelo()
m_voto <- voto %>%  prepara_modelo()
m_ideologia <- ideologia %>% prepara_modelo()
m_adicion <- adicion %>% prepara_modelo()
m_interaccion <- interaccion %>% prepara_modelo(
)
m_voto <- rbind(m_voto,
c("ideol_GMC", rep(NA_real__real_, 4)),
c("RVPP:ideol_GMC", rep(NA_real_, 4)),
c("RVPSOE:ideol_GMC", rep(NA_real_, 4)),
c("RVCs:ideol_GMC", rep(NA_real_, 4)),
c("RVUP:ideol_GMC", rep(NA_real_, 4)),
c("RVMP:ideol_GMC", rep(NA_real_, 4)),
c("RVVOX:ideol_GMC", rep(NA_real_, 4))
)
m_voto <- rbind(m_voto,
c("ideol_GMC", rep(NA_real_, 4)),
c("RVPP:ideol_GMC", rep(NA_real_, 4)),
c("RVPSOE:ideol_GMC", rep(NA_real_, 4)),
c("RVCs:ideol_GMC", rep(NA_real_, 4)),
c("RVUP:ideol_GMC", rep(NA_real_, 4)),
c("RVMP:ideol_GMC", rep(NA_real_, 4)),
c("RVVOX:ideol_GMC", rep(NA_real_, 4))
)
m_voto
map(2:5, ~as.double(m_voto[,.]))
m_voto
map(2:5, ~as.double(unlist(m_voto)[,.]))
unlist(m_voto)
map(2:5, ~as.double(as.data.frame(m_voto)[,.]))
m_voto
m_voto %>% mutate_if(is.character, as.numeric())
m_voto %>% mutate_if(is.character, as.numeric)
m_voto %>% rename(coeficiente = term) %>% mutate_if(is.character, as.numeric)
m_voto %>% rename(coeficiente = term) %>% mutate_at(2:5, as.numeric)
voto <- regresion(mod_voto)
ideologia <- regresion(mod_ideologia)
adicion <- regresion(mod_adicion)
interaccion <- regresion(mod_interaccion)
# Preparamos los modelos para gráfico dots & whiskers
#m_vacio <- vacio %>% prepara_modelo()
m_voto <- voto %>%  prepara_modelo()
m_ideologia <- ideologia %>% prepara_modelo()
m_adicion <- adicion %>% prepara_modelo()
m_interaccion <- interaccion %>% prepara_modelo()
# Todo modelo con las mismas variables y en el mismo orden
# ncol(m_ideologia)-1 = 4
m_voto <- rbind(m_voto,
c("ideol_GMC", rep(NA_real_, 4)),
c("RVPP:ideol_GMC", rep(NA_real_, 4)),
c("RVPSOE:ideol_GMC", rep(NA_real_, 4)),
c("RVCs:ideol_GMC", rep(NA_real_, 4)),
c("RVUP:ideol_GMC", rep(NA_real_, 4)),
c("RVMP:ideol_GMC", rep(NA_real_, 4)),
c("RVVOX:ideol_GMC", rep(NA_real_, 4))
)
m_ideologia <- rbind(c("RVPP", rep(NA, 4)),
c("RVPSOE", rep(NA, 4)),
c("RVCs", rep(NA, 4)),
c("RVUP", rep(NA, 4)),
c("RVMP", rep(NA, 4)),
c("RVVOX", rep(NA, 4)),
m_ideologia,
c("RVPP:ideol_GMC", rep(NA, 4)),
c("RVPSOE:ideol_GMC", rep(NA, 4)),
c("RVCs:ideol_GMC", rep(NA, 4)),
c("RVUP:ideol_GMC", rep(NA, 4)),
c("RVMP:ideol_GMC", rep(NA, 4)),
c("RVVOX:ideol_GMC", rep(NA, 4))
)
m_adicion <- rbind(m_adicion,
c("RVPP:ideol_GMC", rep(NA, 4)),
c("RVPSOE:ideol_GMC", rep(NA, 4)),
c("RVCs:ideol_GMC", rep(NA, 4)),
c("RVUP:ideol_GMC", rep(NA, 4)),
c("RVMP:ideol_GMC", rep(NA, 4)),
c("RVVOX:ideol_GMC", rep(NA, 4))
)
# Añadimos variable "model" a cada modelo
m_voto <- m_voto %>%
mutate(model = "Recuerdo voto") %>%
mutate_at(2:5, as.numeric)
m_ideologia <- m_ideologia %>%
mutate(model = "Ubicación D-I") %>%
mutate_at(2:5, as.numeric)
m_adicion <- m_adicion %>%
mutate(model = "Aditivo") %>%
mutate_at(2:5, as.numeric)
m_interaccion <- m_interaccion %>%
mutate(model = "Interacción") %>%
mutate_at(2:5, as.numeric)
m_voto
4 <- lm(mpg ~ wt + cyl + disp + gear, data = mtcars) # same as m1
m5 <- update(m4, . ~ . + hp) # add another predictor
m6 <- update(m5, . ~ . + am) # and another
# Tidy estimates, rescale, and omit intercepts
prep <- . %>% tidy() %>% by_2sd(mtcars) %>% filter(term != "(Intercept)")
m4_df <- prep(m4)
m5_df <- prep(m5)
m6_df <- prep(m6)
# Ensure all data.frames include rows for all of the predictors, in the same order
# Include NAs for any quantities not estimated in a particular model
m4_df <- rbind(m4_df, c("hp", rep(NA, times = ncol(m4_df) - 1)),
c("am", rep(NA, times = ncol(m4_df) - 1)))
m5_df <- rbind(m5_df, c("am", rep(NA, times = ncol(m5_df) - 1)))
# Add model variable to all data frames
m4_df <- mutate(m4_df, model = "Model 4")
m5_df <- mutate(m5_df, model = "Model 5")
m6_df <- mutate(m6_df, model = "Model 6")
m456_df <- rbind(m4_df, m5_df, m6_df)
# Estimate three models
m4 <- lm(mpg ~ wt + cyl + disp + gear, data = mtcars) # same as m1
m5 <- update(m4, . ~ . + hp) # add another predictor
m6 <- update(m5, . ~ . + am) # and another
# Tidy estimates, rescale, and omit intercepts
prep <- . %>% tidy() %>% by_2sd(mtcars) %>% filter(term != "(Intercept)")
m4_df <- prep(m4)
m5_df <- prep(m5)
m6_df <- prep(m6)
# Ensure all data.frames include rows for all of the predictors, in the same order
# Include NAs for any quantities not estimated in a particular model
m4_df <- rbind(m4_df, c("hp", rep(NA, times = ncol(m4_df) - 1)),
c("am", rep(NA, times = ncol(m4_df) - 1)))
m5_df <- rbind(m5_df, c("am", rep(NA, times = ncol(m5_df) - 1)))
# Add model variable to all data frames
m4_df <- mutate(m4_df, model = "Model 4")
m5_df <- mutate(m5_df, model = "Model 5")
m6_df <- mutate(m6_df, model = "Model 6")
m456_df <- rbind(m4_df, m5_df, m6_df)
# Estimate three models
m4 <- lm(mpg ~ wt + cyl + disp + gear, data = mtcars) # same as m1
m5 <- update(m4, . ~ . + hp) # add another predictor
m6 <- update(m5, . ~ . + am) # and another
# Tidy estimates, rescale, and omit intercepts
prep <- . %>% tidy() %>% by_2sd(mtcars) %>% filter(term != "(Intercept)")
m4_df <- prep(m4)
m5_df <- prep(m5)
m6_df <- prep(m6)
# Ensure all data.frames include rows for all of the predictors, in the same order
# Include NAs for any quantities not estimated in a particular model
m4_df <- rbind(m4_df, c("hp", rep(NA, times = ncol(m4_df) - 1)),
c("am", rep(NA, times = ncol(m4_df) - 1)))
m5_df <- rbind(m5_df, c("am", rep(NA, times = ncol(m5_df) - 1)))
# Add model variable to all data frames
m4_df <- mutate(m4_df, model = "Model 4")
m5_df <- mutate(m5_df, model = "Model 5")
m6_df <- mutate(m6_df, model = "Model 6")
m456_df <- rbind(m4_df, m5_df, m6_df)
install.packages("dotwhisker")
library(dotwhisker)
# Estimate three models
m4 <- lm(mpg ~ wt + cyl + disp + gear, data = mtcars) # same as m1
m5 <- update(m4, . ~ . + hp) # add another predictor
m6 <- update(m5, . ~ . + am) # and another
# Tidy estimates, rescale, and omit intercepts
prep <- . %>% tidy() %>% by_2sd(mtcars) %>% filter(term != "(Intercept)")
m4_df <- prep(m4)
m5_df <- prep(m5)
m6_df <- prep(m6)
# Ensure all data.frames include rows for all of the predictors, in the same order
# Include NAs for any quantities not estimated in a particular model
m4_df <- rbind(m4_df, c("hp", rep(NA, times = ncol(m4_df) - 1)),
c("am", rep(NA, times = ncol(m4_df) - 1)))
m5_df <- rbind(m5_df, c("am", rep(NA, times = ncol(m5_df) - 1)))
# Add model variable to all data frames
m4_df <- mutate(m4_df, model = "Model 4")
m5_df <- mutate(m5_df, model = "Model 5")
m6_df <- mutate(m6_df, model = "Model 6")
m456_df <- rbind(m4_df, m5_df, m6_df)
m4_df
m_interaccion
